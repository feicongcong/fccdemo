#配置数据源
spring.shardingsphere.datasource.names=m1

spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://192.168.72.133:3306/coursedb?serverTimezone=UTC&characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=root

#course表真实分布
spring.shardingsphere.sharding.tables.course.actual-data-nodes=m1.course_$->{1..2}
#course表分布式主键的列，分布式主键的生成策略
spring.shardingsphere.sharding.tables.course.key-generator.column=cid
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.course.key-generator.props.worker.id=1
#course表inline分表策略
#分片键
#spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=cid
#分片算法 分表跟分片键之间的关系
#spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{cid%2+1}

#standard标准分片策略包括精确分片策略+范围分片策略
spring.shardingsphere.sharding.tables.course.table-strategy.standard.sharding-column=cid
#精准分配策略
spring.shardingsphere.sharding.tables.course.table-strategy.standard.precise-algorithm-class-name=com.example.shardingSphere.algorithem.MyPreciseTableShardingAlgorithm
#范围分配策略
spring.shardingsphere.sharding.tables.course.table-strategy.standard.range-algorithm-class-name=com.example.shardingSphere.algorithem.MyRangeTableShardingAlgorithm

#其他运行属性
spring.shardingsphere.props.sql.show=true
spring.main.allow-bean-definition-overriding=true